---
import { Image } from "astro:assets";
import type { Project } from "../../models/Project";
import type { ImageMetadata } from "astro";
import ProjectsGridProject from "./ProjectsGridProject.vue";

const { projects, type } = Astro.props;

export interface Props {
  projects: Project[];
  type: string;
}

const pictures: Record<
  string,
  Promise<{ default: ImageMetadata; eager: true }>
> = {};

Object.entries(
  type === "web"
    ? import.meta.glob<{ default: ImageMetadata; eager: true }>(
        "/src/assets/img/content/projects/web/*.avif",
      )
    : import.meta.glob<{ default: ImageMetadata; eager: true }>(
        "/src/assets/img/content/projects/phone/*.avif",
      ),
).map((img) => {
  const name = img[0]?.split("/")?.pop()?.split(".")?.[0] ?? "notfound";
  pictures[name] = img[1]();
});
---

<div class="wrapper">
  <h2>{type}</h2>
  <div class="projects">
    {
      projects.map((project) => (
        <ProjectsGridProject project={project} type={type}>
          <Image
            class="projectImg"
            src={pictures[project.name]}
            alt={project.name + " cover image"}
            width={350}
            height={255}
            loading={"lazy"}
            format={"avif"}
          />
        </ProjectsGridProject>
      ))
    }
  </div>
</div>

<style lang="scss" scoped>
  .wrapper {
    width: 100%;
    display: flex;
    flex-flow: column;
    gap: 0.5rem;
  }

  h2 {
    font-size: 3rem;
    line-height: 3rem;
    text-transform: capitalize;
  }

  .projects {
    display: flex;
    flex-flow: column;
    gap: 1.5rem;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }

  .projectImg {
    max-height: 15rem;
    width: 100%;
    border-radius: 0.5rem;
    object-fit: cover;
    object-fit: contain;
    background-color: var(--bg-darker0);
    flex: 1;
    overflow: hidden;
  }

  @media (max-width: 1280px) {
    .projects {
      gap: 3rem;
    }
  }
</style>
