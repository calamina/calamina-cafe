---
import { Image } from "astro:assets";
import type { Project } from "../../models/Project";
import ProjectsGridProject from "./ProjectsGridProject.vue";
import { ProjectType } from "../../utils/enum";
import { getImage } from "../../utils/images";

const { projects, type } = Astro.props;

export interface Props {
  projects: Project[];
  type: ProjectType;
}
---

<!-- <script>
  // const options = {
  //   root: document.querySelector(".project"),
  //   rootMargin: "0px",
  //   threshold: 1.0,
  // };

  // const hihi = (entries) => {
  //   entries.forEach((entry) => {
  //     if (entry.isIntersecting) {
  //       let elem = entry.target;

  //       if (entry.intersectionRatio >= 0.75) {
  //         intersectionCounter++;
  //       }
  //     }
  //   });
  // };
  // const observer = new IntersectionObserver(hihi, options);
  const observer = new IntersectionObserver((entries) => {
    for (const entry of entries) {
      const intersecting = entry.isIntersecting;
      entry.target.style.backgroundColor = intersecting ? "blue" : "orange";
    }
  });
  const box = document.getElementById(".project") ?? document.documentElement;
  observer.observe(box);
</script> -->
<div class="wrapper">
  <!-- <h2>{type.toLowerCase()}</h2> -->
  <div class="projects">
    {
      projects.map((project) => (
        <ProjectsGridProject project={project} type={type}>
          <Image
            class="projectImg"
            src={getImage(project.name, type)}
            alt={project.name + " cover"}
            width={1000}
            height={1000}
            loading={"eager"}
            format={"avif"}
          />
          {/* width={350}
            height={255} */}
        </ProjectsGridProject>
      ))
    }
  </div>
</div>

<style lang="scss" scoped>
  .wrapper {
    width: 100%;
    display: flex;
    flex-flow: column;
    gap: 0.5rem;
  }

  h2 {
    font-size: 3rem;
    line-height: 3rem;
    text-transform: capitalize;
  }

  .projects {
    display: flex;
    flex-flow: column;
    gap: 1.5rem;
    gap: 0.25rem;
    align-items: center;
    // display: grid;
    // grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }

  .projectImg {
    max-height: 15rem;
    // width: 100%;
    width: 30rem;
    border-radius: 0.5rem;
    object-fit: cover;
    // object-fit: contain;
    // background-color: var(--bg-darker0);
    // flex: 1;
    overflow: hidden;
  }

  @media (max-width: 1280px) {
    // .projects {
    //   gap: 3rem;
    // }
    .projectImg {
      width: 100%;
    }
  }
</style>
