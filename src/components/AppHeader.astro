---
import AppHeaderProject from "./AppHeaderProject.vue";
import SearchBar from "./SearchBar.vue";
import ThemeSwitch from "./ThemeSwitch.vue";

const { project } = Astro.params;
const route = Astro.originPathname;

enum ROUTES {
  home = "/",
  about = "about",
  projects = "projects",
}
const activeRoute = (): ROUTES => {
  if (route === ROUTES.home) return ROUTES.home;
  if (route.includes(ROUTES.about)) return ROUTES.about;
  if (route.includes(ROUTES.projects)) return ROUTES.projects;
  return ROUTES.home;
};
---

<header>
  <nav>
    <a href="/" class:list={[{ active: activeRoute() === ROUTES.home }]}>home</a
    >
    <a href="/about" class:list={[{ active: activeRoute() === ROUTES.about }]}
      >about</a
    >
    <div class="projects">
      <a
        href="/projects"
        class:list={[{ active: activeRoute() === ROUTES.projects }]}>projects</a
      >
      <AppHeaderProject project={project} />
    </div>
    <div class="actions">
      <SearchBar client:load />
      <ThemeSwitch client:load />
    </div>
  </nav>

  <style lang="scss" scoped>
    header {
      max-width: var(--app-width);
      position: fixed;
      display: flex;
      top: 0;
      height: 4rem;
      width: 100%;
      align-items: center;
      justify-content: space-between;
      padding: 0.5rem;
      z-index: 50;
      pointer-events: none;
    }

    nav {
      display: flex;
      gap: 1.25rem;
      width: 100%;
      align-items: center;
    }

    a {
      pointer-events: auto;
      height: fit-content;
    }

    .projects {
      display: flex;
      gap: 0.25rem;
      pointer-events: auto;
      margin-right: auto;
    }

    .actions {
      display: flex;
      gap: 0.5rem;
      pointer-events: auto;
    }

    .active {
      text-decoration: underline;
      text-underline-offset: 3px;
    }

    .subtype {
      color: var(--color-light);
    }

    @media (max-width: 1280px) {
      .actions {
        display: none;
      }
      header {
        padding: 0 1rem;
      }
    }
  </style>
</header>
