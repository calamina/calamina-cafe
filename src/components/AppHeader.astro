---
import { queryWebProjects } from "../utils/utils";
import AppHeaderProject from "./AppHeaderProject.vue";
import SearchBar from "./SearchBar.vue";
import ThemeSwitch from "./ThemeSwitch.vue";
import { ProjectType } from "../utils/enum";
import type { TypedProject } from "../models/Types";

const { project } = Astro.params;
const route = Astro.originPathname;

enum ROUTES {
  home = "/",
  about = "about",
  projects = "projects",
}

const routes = {
  home: route === ROUTES.home,
  about: route.includes(ROUTES.about),
  projects: route.includes(ROUTES.projects),
};

const projects = await queryWebProjects();
const list = projects.map((project: TypedProject) => ({
  name: project.name,
  desc: project.description,
  url:
    (project.type === ProjectType.WEB ? "/projects/web/" : "/projects/phone/") +
    project.name,
}));
---

<header>
  <a class="logo" href="/"
    ><span class="logotext">calamina</span>á´—<span class="logotext">cafe</span
    ></a
  >
  <nav>
    <a href="/" class:list={[{ active: routes.home }]}> home </a>
    <a href="/about" class:list={[{ active: routes.about }]}>about</a>
    <div class="projects">
      <a href="/projects" class:list={[{ active: routes.projects }]}>
        projects
      </a>
      <AppHeaderProject project={project} />
    </div>
  </nav>
  <div class="actions">
    <SearchBar list={list} client:load />
    <ThemeSwitch client:load />
  </div>
</header>

<style scoped>
  header {
    max-width: var(--app-width);
    position: fixed;
    display: flex;
    top: 0;
    height: 5rem;
    width: 100%;
    align-items: center;
    justify-content: space-between;
    padding: 1.5rem 2rem;
    z-index: 50;
    pointer-events: none;
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  nav {
    display: flex;
    gap: 1.25rem;
    justify-self: center;
    background-color: var(--bg);
    border-radius: 0.9rem;
    padding: 0.5rem;
  }

  a {
    pointer-events: auto;
    height: fit-content;
  }

  .logo {
    padding: 0.25rem 1rem;
    gap: 0.15rem;
    background-color: var(--highlight);
    color: var(--color-hover);

    &:hover {
      .logotext {
        &:first-of-type {
          width: 8ch;
        }
        &:last-of-type {
          width: 4ch;
        }
      }
    }
  }

  .logotext {
    width: 1ch;
    overflow: hidden;
    color: var(--color-hover);
    transition: width 0.25s;
  }

  .projects {
    display: flex;
    gap: 0.25rem;
    pointer-events: auto;
    margin-right: auto;
  }

  .actions {
    justify-self: end;
    display: flex;
    gap: 0.5rem;
    pointer-events: auto;
  }

  .active {
    text-decoration: underline;
    text-underline-offset: 3px;
  }

  .subtype {
    color: var(--color-light);
  }

  @media (max-width: 1280px) {
    header {
      padding: 1rem;
    }
  }
</style>
