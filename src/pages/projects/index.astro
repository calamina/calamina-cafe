---
import MainLayoutFooterless from "../../layouts/MainLayoutFooterless.astro";
import ProjectsGrid from "../../components/projects/ProjectsGrid.astro";
// import ProjectsFilters from "../../components/projects/ProjectsFilters.vue";
import { query } from "../../utils/utils.ts";
import type { Project } from "../../models/Project";
import { ProjectCollection, ProjectType } from "../../utils/enum";

const webProjects = await query<Project>(ProjectCollection.WEB);
const phoneProjects = await query<Project>(ProjectCollection.PHONE);
---

<script>
    const observer = new IntersectionObserver(
        (entries) => {
            for (const entry of entries) {
                // (entry.target as HTMLElement).style.gridTemplateColumns =
                //     entry.isIntersecting ? "1fr 1fr" : "1fr 0fr";
                (entry.target as HTMLElement).style.width = entry.isIntersecting
                    ? "60vw"
                    : "35vw";
            }
        },
        { threshold: 1 },
    );

    const elements = document.querySelectorAll(".project");
    elements.forEach((element) => observer.observe(element));
</script>
<script>
    import Lenis from "lenis";

    const lenis = new Lenis({
        infinite: true,
        syncTouch: true,
    });

    function raf(time) {
        lenis.raf(time);
        requestAnimationFrame(raf);
    }

    requestAnimationFrame(raf);

    const repeatItems = (parentEl, total = 0) => {
        const items = [...parentEl.children];
        for (let i = 0; i <= total - 1; ++i) {
            var cln = items[i].cloneNode(true);
            parentEl.appendChild(cln);
        }
    };
    repeatItems(document.querySelector(".content"), 2);
</script>

<MainLayoutFooterless>
    <!-- <div class="grid"> -->
    <!-- <ProjectsFilters client:load /> -->
    <div class="content">
        <ProjectsGrid projects={webProjects} type={ProjectType.WEB} />
        <ProjectsGrid projects={phoneProjects} type={ProjectType.PHONE} />
    </div>
    <!-- <div class="visible">
        
    </div> -->
    <!-- </div> -->
</MainLayoutFooterless>

<style scoped lang="scss">
    // .grid {
    //     width: 100%;
    //     display: grid;
    //     grid-template-columns: repeat(4, minmax(0px, 1fr));
    //     position: relative;
    //     padding-bottom: 2rem;
    //     gap: 1rem;
    // }
    // .visible {
    //     background-color: red;
    //     height: 40vh;
    //     width: 100%;
    //     opacity: 0.3;
    //     z-index: 999;
    //     position: fixed;
    //     top: 15vh;
    // }

    .content {
        grid-column: span 3;
        width: 100%;
        display: flex;
        flex-flow: column;
        align-items: center;
        gap: 0.25rem;
        gap: 0;
        // gap: 3rem;
        // padding: 5vh 0;
        // padding: 5vh 0;
    }

    @media (max-width: 1280px) {
        .content {
            // padding: 0 1rem 1rem;
            // padding: 15vh 0;
        }
    }
</style>
