---
import MainLayoutFooterless from "../../../layouts/MainLayoutFooterless.astro";
import { queryOne, queryPrevious, queryNext } from "../../../utils";
import type { Project } from "../../../models/Project";
import ProjectInfo from "../../../components/project/ProjectInfo.vue";
import ProjectGallery from "../../../components/project/ProjectGallery.vue";
import { Image } from "astro:assets";
import ButtonImage from "../../../components/ButtonImage.vue";
import { getCollection } from "astro:content";
import ProjectNavigation from "../../../components/project/ProjectNavigation.vue";
import type { ImageMetadata } from "astro";

const projects = await getCollection("webProjects");
const total = projects.length;

export async function getStaticPaths() {
  const projects = await getCollection("webProjects");
  return projects.map((project) => ({
    params: { project: project.data.name },
  }));
}

const { project } = Astro.params;
const { num, name, url, tech, description, online } =
  (await queryOne<Project>("webProjects", project)) ?? {};

const prev = await queryPrevious("webProjects", num ?? 0);
const next = await queryNext("webProjects", num ?? 0);

const images = () => {
  const files = Object.entries(
    import.meta.glob<{ default: ImageMetadata; eager: true }>(
      "/src/assets/img/content/projects/web/**/*.avif",
    ),
  );

  return files
    .filter((file) => file[0].includes(project) && !file[0].includes("mini"))
    .map((file) => file[1]().then((lul) => lul));
};

const isVerticalImage = (
  image: Promise<{ default: ImageMetadata; eager: true }>,
) => image.then((img) => img.default.width / img.default.height < 1);
---

<MainLayoutFooterless>
  <div class="project">
    <ProjectInfo
      name={name}
      url={url}
      tech={tech}
      description={description}
      online={online}
    >
      <!-- ADD CONSTANTS FOR PATH -->
      <ProjectNavigation
        prev={prev}
        next={next}
        total={total}
        path="/projects/web/"
      />
    </ProjectInfo>
    <ProjectGallery client:only="vue">
      {
        images().map((image) => (
          <ButtonImage>
            <Image
              src={image}
              alt={name + "gallery image"}
              loading={"eager"}
              class:list={[{ mobile: isVerticalImage(image) }]}
            />
          </ButtonImage>
        ))
      }
    </ProjectGallery>
    <ProjectNavigation
      prev={prev}
      next={next}
      total={total}
      path="/projects/web/"
      mobile={true}
    />
  </div>
</MainLayoutFooterless>

<style scoped lang="scss">
  .project {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(10, minmax(0px, 1fr));
    gap: 0.5rem;
  }

  img {
    width: 100%;
    height: auto;
    object-fit: contain;
  }

  img.mobile {
    width: auto;
    height: 100%;
    max-height: 85vh;
  }

  @media (max-width: 1280px) {
    .project {
      display: flex;
      flex-flow: column;
      padding: 0 0.5rem;
    }
  }
</style>
